/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
struct dir 
{
 char name[10];
 files[10][20];
 int fcount; 
}arr[10];

int dircount=0; 
void createdir()
{
    printf("enter the direc name :");
    arr[dircount]=0; //init filecount
    scanf("%s",&arr[dircount++].name);
    
}
void deletedir()
{
    printf("enter the directory name :");
    scanf("%s",nm);
    for(int i=0;i<dircount;i++)
    {
        if(arr[i].name == nm)
        {
            printf("found..deleting ");
            for(int j=i;j<dircount;j++)
            {
                arr[j]=arr[j++];
            }
            return 0;
        }
    }
    return 1;
}
int searchdir(char nm[])
{
    for(int i=0;i<dircount;i++)
    {
        if(arr[i].name == nm)
        {
            return i;
        }
    }
    return 0;
}
void createfile(int v)
{
    printf("enter filename :");
    scanf("%s",&arr[v].files[fcount++]);
    return;
    
}
void deletefile(int v)
{
   printf("enter the file to delete :");
   char nm[10];
   if(searchfile(v,nm)==-1)
   {
       return;
   }
   else
   {
       i=searchfile(v,nm);
       for(int j=i;j<arr[v].fcount;j++)
       {
           arr[v].files[j]=arr[j].files[j+1];
       }
   }
}
int searchfile(int v,char filen[10])
{
    
    if(!searchdir(d))
    {
        printf("directory not found.. ");
        return -1;
    }
    for(int i=0;i<arr[j].fcount;i++)
    {
        if(files[i]==filen)
        {
            printf("found...");
            return i;
        }
    }
    return -1;
}
void opendir()
{
    for(int i=0;i<dircount;i++)
    {
        printf("%s\n",arr[i].name);
    }
    printf("enter which directory "); char nm[10];
    scanf("%s",nm);
    int v=searchdir(nm);
    while(1)
    {
        printf("1.create file 2.delete file 3. search file");
        int c; scanf("%d",&c);
        switch(c)
        {
           case 1:createfile(v); break;
           case 2:deletefile(v); break;
           case 3:searchfile(v,nm); break;
           case 0:
           return;
        }
    }
}

int main()
{
    while(1)
    {
        printf("enter c :");
        scanf("%d",&c);
        switch(c)
        {
            case 1: createdir(); break;
            case 2: if(deletedir()) { printf("not found");  }; break;
            case 3: opendir();
            
        }
    }

    return 0;
}
